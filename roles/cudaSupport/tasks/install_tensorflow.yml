---
- name: Check for NVIDIA GPU
  command: nvidia-smi
  register: nvidia_smi_check
  ignore_errors: yes

- name: Set TensorFlow package based on GPU presence
  set_fact:
    tensorflow_package: "{{ 'tensorflow-gpu' if nvidia_smi_check.rc == 0 else 'tensorflow' }}"

- name: Install TensorFlow in the Conda environment for the new user
  command: >
    /home/{{ new_username }}/miniconda/bin/conda install -n {{ conda_env_name }} {{ tensorflow_package }}=={{ tensorflow_version }} -y
  args:
    chdir: /home/{{ new_username }}/miniconda
  become: yes
  become_user: "{{ new_username }}"

- name: Check for TensorFlow installation with Conda
  command: >
    /home/{{ new_username }}/miniconda/bin/conda list {{ tensorflow_package }}
  register: conda_check
  become: yes
  become_user: "{{ new_username }}"
  ignore_errors: yes  # Ignore errors if TensorFlow is not installed

- name: Display TensorFlow version
  debug:
    msg: "{{ tensorflow_package | capitalize }} is installed. Version: {{ conda_check.stdout }}"
  when: conda_check.rc == 0  # Only run if the command was successful

- name: Raise an error if TensorFlow is not installed
  fail:
    msg: "{{ tensorflow_package | capitalize }} is not installed in the Conda environment."
  when: conda_check.rc != 0  # Only run if the command failed

- name: Install additional packages in the Conda environment for the new user
  command: >
    /home/{{ new_username }}/miniconda/bin/conda install -n {{ conda_env_name }} {{ item }} -y
  loop: "{{ additional_packages }}"
  when: additional_packages | length > 0
  become: yes
  become_user: "{{ new_username }}"
